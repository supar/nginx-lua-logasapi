log_by_lua '
    local function get_params(method, names)
        local err
        local args
        local ret = {}

        if method == "get" then
            args = ngx.req.get_uri_args()
        elseif method == "post" then
            args, err = ngx.req.get_post_args(50)

            if not args then
                ngx.log(ngx.ERR, "failed to get post args")

                return ret
            end
        end
            
        if args then
            for i, name in ipairs(names) do
                for key, val in pairs(args) do
                    if string.lower(key) == string.lower(name) then
                        ret[i] = string.lower(val)
                    end
                end
            end
        end

        return ret
    end

    local function split(str, delimiter)
        result = {};
        for match in (str..delimiter):gmatch("(.-)"..delimiter) do
            table.insert(result, match);
        end
        return result;
    end

    local vars = ngx.var
    local ignore = vars.ignore_host_in_metrics or "0"

    if (not ignore or ignore == "0") then
        local host = vars.host:gsub("^www.", "")
        local method = vars.request_method
        local params_to_api = vars.log_metrics_params_to_api or ""
        local rest_to_api = vars.log_metrics_rest_to_api or ""
        local api = ""

        if (params_to_api ~= "" and method ~= "") then
            local api_vars = split(params_to_api, "/+")

            if (api_vars and #api_vars > 0) then
                local isbuff = vars.log_metrics_api_buff or false

                api_vars = get_params(string.lower(method), api_vars)

                if isbuff ~= nil then
                    ngx.var.log_metrics_api_buff = table.concat(api_vars, "/")

                    if ngx.var.accept_api_to_metrics == "1" then
                        api = ngx.var.log_metrics_api_buff
                    end
                else
                    api = table.concat(api_vars, "/")
                end
            end
        elseif rest_to_api ~= "" then
            api = vars.uri
        end

        ngx.log(ngx.WARN, "URI metrics: " .. api)

        metric_requests:inc(1, {host, string.lower(method), ngx.var.status, api})
        metric_request_sizes:inc(tonumber(ngx.var.request_length), {host, string.lower(method), api})
        metric_latency:observe(ngx.now() - ngx.req.start_time(), {host, api})
    else
        ngx.log(ngx.WARN, "Ignore host metrics: " .. ngx.var.host)
    end
';
